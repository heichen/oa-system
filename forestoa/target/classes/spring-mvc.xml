<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
	default-lazy-init="false">
	<context:property-placeholder
		ignore-unresolvable="true"
		location="classpath*:/application.properties,classpath*:/jdbc.properties" />

	<!-- 扫描所有的controller 但是不扫描service -->
	<context:component-scan base-package="com.gxzn"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 开启controller层aspect注解支持 -->
	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />

	<!-- 默认实现为AnnotationDrivenBeanDefinitionParser -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
				<property name="supportedMediaTypes">
					<list>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="text" />
							<constructor-arg index="1" value="plain" />
							<constructor-arg index="2" value="UTF-8" />
						</bean>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="*" />
							<constructor-arg index="1" value="*" />
							<constructor-arg index="2" value="UTF-8" />
						</bean>
					</list>
				</property>
			</bean>
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
						<!-- 避免循环引用 -->
						<value>DisableCircularReferenceDetect</value>
						<!-- 是否输出值为null的字段 -->
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
						<!-- 数值字段如果为null,输出为0,而非null -->
						<value>WriteNullNumberAsZero</value>
						<!-- 字符类型字段如果为null,输出为"",而非null -->
						<value>WriteNullStringAsEmpty</value>
						<!-- List字段如果为null,输出为[],而非null -->
						<value>WriteNullListAsEmpty</value>
						<!-- Boolean字段如果为null,输出为false,而非null -->
						<value>WriteNullBooleanAsFalse</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 跳转到登录页 -->
	<bean
		class="com.gxzn.ares.framework.spring.interceptor.DefaultAccessLegalCheck"
		id="accessLegalCheck">
		<property name="sessionKey" value="SESSION_USER" />
		<property name="loginUrl" value="toLogin" />
	</bean>

	<mvc:interceptors>
		<!--日志拦截器 -->
		<bean class="com.gxzn.ares.framework.spring.interceptor.LogInterceptor">
			<property name="openAccessLog" value="${openAccessLog}" />
		</bean>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/static/**" />
			<bean
				class="com.gxzn.ares.framework.spring.interceptor.ClearCacheInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/static/**" />
			<mvc:exclude-mapping path="/users/login" />
			<mvc:exclude-mapping path="/toLogin" />
			<mvc:exclude-mapping path="/errorHandler" />
			<mvc:exclude-mapping path="/sso/**" />
			<bean
				class="com.gxzn.ares.framework.spring.interceptor.AccessLegalCheckInterceptor">
				<property name="accessLegalCheck" ref="accessLegalCheck" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />
	<mvc:view-controller path="/" view-name="redirect:/index" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>${upload.max.size}</value>
		</property>
	</bean>

</beans>
